<?php

/**
 * This is the model base class for the table "products".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Product".
 *
 * Columns in table "products" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $category_id
 * @property string $name
 * @property string $short_des
 * @property string $description
 * @property integer $type_id
 * @property string $thumbnail
 * @property string $image
 * @property double $price
 * @property double $price_old
 * @property string $unit
 * @property double $shipping
 * @property integer $related_id
 * @property string $created_at
 * @property string $updated_at
 *
 */
abstract class BaseProduct extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'products';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Product|Products', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, thumbnail', 'required'),
			array('category_id, type_id, related_id', 'numerical', 'integerOnly'=>true),
			array('price, price_old, shipping', 'numerical'),
			array('name, thumbnail, image', 'length', 'max'=>255),
			array('unit', 'length', 'max'=>3),
			array('short_des, description, created_at, updated_at', 'safe'),
			array('category_id, short_des, description, type_id, image, price, price_old, unit, shipping, related_id, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, category_id, name, short_des, description, type_id, thumbnail, image, price, price_old, unit, shipping, related_id, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'category_id' => Yii::t('app', 'Category'),
			'name' => Yii::t('app', 'Name'),
			'short_des' => Yii::t('app', 'Short Des'),
			'description' => Yii::t('app', 'Description'),
			'type_id' => Yii::t('app', 'Type'),
			'thumbnail' => Yii::t('app', 'Thumbnail'),
			'image' => Yii::t('app', 'Image'),
			'price' => Yii::t('app', 'Price'),
			'price_old' => Yii::t('app', 'Price Old'),
			'unit' => Yii::t('app', 'Unit'),
			'shipping' => Yii::t('app', 'Shipping'),
			'related_id' => Yii::t('app', 'Related'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('category_id', $this->category_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('short_des', $this->short_des, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('thumbnail', $this->thumbnail, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('price', $this->price);
		$criteria->compare('price_old', $this->price_old);
		$criteria->compare('unit', $this->unit, true);
		$criteria->compare('shipping', $this->shipping);
		$criteria->compare('related_id', $this->related_id);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}