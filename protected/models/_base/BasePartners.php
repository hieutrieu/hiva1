<?php

/**
 * This is the model base class for the table "partners".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Partners".
 *
 * Columns in table "partners" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $address
 * @property string $image
 * @property integer $status
 * @property string $url
 * @property string $created_at
 * @property string $updated_at
 *
 */
abstract class BasePartners extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'partners';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Partners|Partners', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('status', 'numerical', 'integerOnly'=>true),
			array('name, image, url', 'length', 'max'=>255),
			array('address', 'length', 'max'=>512),
			array('description, created_at, updated_at', 'safe'),
			array('name, description, address, image, status, url, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, description, address, image, status, url, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'address' => Yii::t('app', 'Address'),
			'image' => Yii::t('app', 'Image'),
			'status' => Yii::t('app', 'Status'),
			'url' => Yii::t('app', 'Url'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}