<?php

/**
 * This is the model base class for the table "notify".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Notify".
 *
 * Columns in table "notify" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $to_id
 * @property integer $from_id
 * @property string $subject
 * @property string $content
 * @property integer $is_read
 * @property string $created_at
 *
 */
abstract class BaseNotify extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'notify';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Notify|Notifies', $n);
	}

	public static function representingColumn() {
		return 'subject';
	}

	public function rules() {
		return array(
			array('to_id, from_id, is_read', 'numerical', 'integerOnly'=>true),
			array('subject', 'length', 'max'=>255),
			array('content, created_at', 'safe'),
			array('to_id, from_id, subject, content, is_read, created_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, to_id, from_id, subject, content, is_read, created_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'to_id' => Yii::t('app', 'To'),
			'from_id' => Yii::t('app', 'From'),
			'subject' => Yii::t('app', 'Subject'),
			'content' => Yii::t('app', 'Content'),
			'is_read' => Yii::t('app', 'Is Read'),
			'created_at' => Yii::t('app', 'Created At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('to_id', $this->to_id);
		$criteria->compare('from_id', $this->from_id);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('content', $this->content, true);
		$criteria->compare('is_read', $this->is_read);
		$criteria->compare('created_at', $this->created_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}